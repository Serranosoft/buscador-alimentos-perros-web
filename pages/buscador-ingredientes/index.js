import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { formatToUrl, removeAccents } from "../../utils/strings";
import { fetchExcel } from "../api/excel";

export default function buscadorIngredientes({ ingredients }) {

    const [matches, setMatches] = useState([]);

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div>
                <input type="text" className="search-input" placeholder="Â¿Mi perro puede comer ..." onKeyUp={(e) => displayMatches(e.target.value)} onChange={(e) => displayMatches(e.target.value)} />
                <div className="suggestions">
                    {matches.map(el => {
                        return (
                            <Link href={`buscador-ingredientes/${el.url}`}><a dangerouslySetInnerHTML={{__html: el.html}} /></Link>
                        )
                    })}
                </div>
            </div>
        </>
    )

    function findMatches(letters) {
        return ingredients.filter(ingredient => {
            const regex = new RegExp(removeAccents(letters), 'gi');
            if (letters != "") {
                return removeAccents(ingredient.name).match(regex);
            }
            return "";
        })
    }

    function displayMatches(letters) {
        const matchArray = findMatches(letters);
        let i = 0;
        let matches = [];
        matchArray.map(ingredient => {
            if (i < 5) {
                const regex = new RegExp(removeAccents(letters), 'gi');
                const ingrMatched = removeAccents(ingredient.name).replace(regex, `<span style="background-color: yellow">${letters}</span>`)
                i++;
                matches.push({html: `<p>${ingrMatched}</p>`, url:removeAccents(formatToUrl(ingredient.name)), name: ingredient.name})
            }
        }).join('');
        setMatches(matches)
    }

}

export async function getServerSideProps() {
    let ingredients = await fetchExcel();
    return {
        props: { ingredients }
    }
}